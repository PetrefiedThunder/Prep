# This file was auto-generated by openapi-python-client.
from __future__ import annotations

from dataclasses import dataclass, field
from typing import Any, Dict, MutableMapping, Optional


@dataclass
class Client:
    """HTTP client configuration for the Prep Compliance API."""

    base_url: str
    headers: MutableMapping[str, str] = field(default_factory=dict)
    cookies: MutableMapping[str, Any] = field(default_factory=dict)
    timeout: float = 10.0
    verify_ssl: bool = True
    follow_redirects: bool = False
    raise_on_unexpected_status: bool = False
    api_key: Optional[str] = None
    api_key_prefix: Optional[str] = "Bearer"
    api_key_header: str = "Authorization"

    def get_headers(self) -> Dict[str, str]:
        headers: Dict[str, str] = dict(self.headers)
        if self.api_key:
            if self.api_key_prefix:
                headers[self.api_key_header] = f"{self.api_key_prefix} {self.api_key}"
            else:
                headers[self.api_key_header] = self.api_key
        return headers

    def get_cookies(self) -> Dict[str, Any]:
        return dict(self.cookies)

    def get_timeout(self) -> float:
        return self.timeout


@dataclass
class AuthenticatedClient(Client):
    """Client that always sends an API key."""

    api_key: str = ""

    def __post_init__(self) -> None:
        if not self.api_key:
            raise ValueError("api_key must be provided for AuthenticatedClient")
