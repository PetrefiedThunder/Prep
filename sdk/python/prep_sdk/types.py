# This file was auto-generated by openapi-python-client.
from __future__ import annotations

from dataclasses import dataclass
from http import HTTPStatus
from typing import Generic, Mapping, Optional, TypeVar


class Unset:
    """Sentinel value used for optional parameters."""

    def __bool__(self) -> bool:  # pragma: no cover - matches generator semantics
        return False


UNSET = Unset()


T = TypeVar("T")


@dataclass
class Response(Generic[T]):
    """Standardized HTTP response wrapper."""

    status_code: HTTPStatus
    content: bytes
    headers: Mapping[str, str]
    parsed: Optional[T]


class UnexpectedStatus(Exception):
    """Raised when the server returns an undocumented status code."""

    def __init__(self, status_code: int, content: bytes) -> None:
        message = f"Unexpected status code: {status_code}"
        super().__init__(message)
        self.status_code = status_code
        self.content = content
