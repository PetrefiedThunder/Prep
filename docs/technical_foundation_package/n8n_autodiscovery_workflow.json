{
  "name": "PrepChef Socrata Auto Discovery",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "url": "https://api.us.socrata.com/api/catalog/v1?categories=Health&search_context={{$json.county_domain}}&tags=inspection",
        "responseFormat": "json"
      },
      "id": "HttpRequest",
      "name": "Fetch Catalog",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [300, 300]
    },
    {
      "parameters": {
        "functionCode": "const datasets = items[0].json.results || [];\nreturn datasets.map(dataset => ({\n  json: {\n    name: dataset.resource.name,\n    identifier: dataset.resource.id,\n    description: dataset.resource.description,\n    domain: dataset.metadata.domain,\n    viewType: dataset.resource.type,\n    link: dataset.resource.link,\n    rowCount: dataset.resource.rows,\n    columns: dataset.resource.columns,\n    county_domain: $json.county_domain\n  }\n}));"
      },
      "id": "Function",
      "name": "Parse Results",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [580, 300]
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": "prepchef.data_sources",
        "schema": "public",
        "columns": "county_id, provider, dataset_identifier, dataset_name, metadata",
        "values": "={{$json.county_id}},'socrata','{{$json.identifier}}','{{$json.name}}',{{JSON.stringify({link: $json.link, description: $json.description, domain: $json.domain, viewType: $json.viewType, rowCount: $json.rowCount, columns: $json.columns})}}"
      },
      "id": "Supabase",
      "name": "Upsert Data Sources",
      "type": "@n8n/n8n-nodes-base.supabase",
      "typeVersion": 1,
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials"
        }
      },
      "position": [860, 300]
    },
    {
      "parameters": {
        "sheetId": "={{$json.audit_sheet_id}}",
        "range": "Matches!A:E",
        "valueInputMode": "RAW",
        "options": {
          "valueInputOption": "RAW"
        },
        "values": "={{[[new Date().toISOString(), $json.county_domain, $json.identifier, $json.name, $json.link]]}}"
      },
      "id": "GoogleSheets",
      "name": "Log Discovery",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1120, 120],
      "credentials": {
        "googleApi": {
          "id": "google-service-account"
        }
      }
    },
    {
      "parameters": {
        "mode": "passThrough",
        "output": "input1"
      },
      "id": "Merge",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [860, 120]
    },
    {
      "parameters": {
        "items": 1,
        "options": {}
      },
      "id": "Schedule",
      "name": "Run Weekly",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [40, 300],
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hours": ["7"],
              "minutes": ["0"],
              "weekday": ["1"]
            }
          ]
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const pilotCounties = [\n  { county_id: $json.multnomah_id, county_domain: 'data.multco.us', audit_sheet_id: $json.audit_sheet_id },\n  { county_id: $json.king_id, county_domain: 'data.kingcounty.gov', audit_sheet_id: $json.audit_sheet_id },\n  { county_id: $json.cook_id, county_domain: 'datacatalog.cookcountyil.gov', audit_sheet_id: $json.audit_sheet_id },\n  { county_id: $json.fulton_id, county_domain: 'opendata.fultoncountyga.gov', audit_sheet_id: $json.audit_sheet_id },\n  { county_id: $json.travis_id, county_domain: 'data.austintexas.gov', audit_sheet_id: $json.audit_sheet_id }\n];\nreturn pilotCounties.map(county => ({ json: county }));"
      },
      "id": "PreparePilotList",
      "name": "Prepare Pilot List",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [160, 300]
    }
  ],
  "connections": {
    "Run Weekly": {
      "main": [
        [
          {
            "node": "Prepare Pilot List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Pilot List": {
      "main": [
        [
          {
            "node": "Fetch Catalog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Catalog": {
      "main": [
        [
          {
            "node": "Parse Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Results": {
      "main": [
        [
          {
            "node": "Upsert Data Sources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Log Discovery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "pinData": {},
  "staticData": null
}
