name: PrepChef Nightly Data Sync

on:
  schedule:
    - cron: '0 8 * * *' # 8:00 UTC nightly
  workflow_dispatch:

jobs:
  nightly-sync:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      SOCRATA_APP_TOKEN: ${{ secrets.SOCRATA_APP_TOKEN }}
      SOCRATA_USERNAME: ${{ secrets.SOCRATA_USERNAME }}
      SOCRATA_PASSWORD: ${{ secrets.SOCRATA_PASSWORD }}
      PILOT_COUNTY_IDS: ${{ secrets.PILOT_COUNTY_IDS }} # comma-delimited UUIDs following schema county order
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: scripts/nightly_sync

      - name: Execute Socrata -> Supabase ETL
        run: |
          python nightly_sync.py \
            --supabase-url "$SUPABASE_URL" \
            --supabase-service-key "$SUPABASE_SERVICE_KEY" \
            --socrata-app-token "$SOCRATA_APP_TOKEN" \
            --socrata-username "$SOCRATA_USERNAME" \
            --socrata-password "$SOCRATA_PASSWORD" \
            --pilot-county-ids "$PILOT_COUNTY_IDS"
        working-directory: scripts/nightly_sync

      - name: Upload ETL logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-sync-logs
          path: scripts/nightly_sync/logs
          if-no-files-found: ignore

      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "PrepChef Nightly Sync failed. Inspect logs in GitHub Actions."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
